{"version":3,"sources":["scripts/main.js"],"names":["thead","document","querySelector","mainColumn","tBody","tBodyRows","rows","rowsArray","Array","from","convertToNumber","stringWithSymbols","parseFloat","replace","sortRow","rowToSort","firstChild","removeChild","forEach","row","appendChild","addEventListener","e","target","i","children","sort","a","b","salaryA","cells","innerText","nameA","toLowerCase","nameB","localeCompare","length"],"mappings":";AAAA,aAEA,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAaH,EAAME,cAAc,MACjCE,EAAQH,SAASC,cAAc,SAC/BG,EAAYD,EAAME,KAClBC,EAAYC,MAAMC,KAAKJ,GAE7B,SAASK,EAAgBC,GAChBC,OAAAA,WAAWD,EAAkBE,QAAQ,QAAS,KAGvD,SAASC,EAAQC,GACRX,KAAAA,EAAMY,YACXZ,EAAMa,YAAYb,EAAMY,YAG1BD,EAAUG,QAAQ,SAAAC,GAChBf,EAAMgB,YAAYD,KAItBnB,EAAMqB,iBAAiB,QAAS,SAAAC,GAGzB,IAFCC,IAAAA,EAASD,EAAEC,OAERC,EAAAA,SAAAA,GAGHD,IAAWpB,EAAWsB,SAASD,IAAMA,GAAK,GAQ5CV,EAPaP,EAAUmB,KAAK,SAACC,EAAGC,GAIvBC,OAHSnB,EAAgBiB,EAAEG,MAAMN,GAAGO,WAC3BrB,EAAgBkB,EAAEE,MAAMN,GAAGO,cAQ3CR,IAAWpB,EAAWsB,SAASD,IAAMA,EAAI,GAQ3CV,EAPaP,EAAUmB,KAAK,SAACC,EAAGC,GACxBI,IAAAA,EAAQL,EAAEG,MAAMN,GAAGO,UAAUE,cAC7BC,EAAQN,EAAEE,MAAMN,GAAGO,UAAUE,cAE5BD,OAAAA,EAAMG,cAAcD,OAnBxBV,EAAI,EAAGA,EAAIrB,EAAWsB,SAASW,OAAQZ,IAAvCA,EAAAA","file":"main.4c1ccc9a.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst thead = document.querySelector('thead');\nconst mainColumn = thead.querySelector('tr');\nconst tBody = document.querySelector('tbody');\nconst tBodyRows = tBody.rows;\nconst rowsArray = Array.from(tBodyRows);\n\nfunction convertToNumber(stringWithSymbols) {\n  return parseFloat(stringWithSymbols.replace(/[$,]/g, ''));\n}\n\nfunction sortRow(rowToSort) {\n  while (tBody.firstChild) {\n    tBody.removeChild(tBody.firstChild);\n  }\n\n  rowToSort.forEach(row => {\n    tBody.appendChild(row);\n  });\n}\n\nthead.addEventListener('click', e => {\n  const target = e.target;\n\n  for (let i = 0; i < mainColumn.children.length; i++) {\n    let sortedRows;\n\n    if (target === mainColumn.children[i] && i >= 2) {\n      sortedRows = rowsArray.sort((a, b) => {\n        const salaryA = convertToNumber(a.cells[i].innerText);\n        const salaryB = convertToNumber(b.cells[i].innerText);\n\n        return salaryA - salaryB;\n      });\n\n      sortRow(sortedRows);\n    }\n\n    if (target === mainColumn.children[i] && i < 2) {\n      sortedRows = rowsArray.sort((a, b) => {\n        const nameA = a.cells[i].innerText.toLowerCase();\n        const nameB = b.cells[i].innerText.toLowerCase();\n\n        return nameA.localeCompare(nameB);\n      });\n\n      sortRow(sortedRows);\n    }\n  }\n}\n);\n"]}